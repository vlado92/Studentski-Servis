<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Slika.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAMCAggICggJDQgNCAgICAgJCgoICAgICAgICAgICAgKCAgI
        CA0ICAgICAgICAoICAgICgoJCAgLDgwIDQgICgj/2wBDAQMEBAICAgkCAgkIAgICCAgICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAj/wAARCABVAEQDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDgqACgAAoA7rw98MGkwZGKbv4FxuA/2iQQp/2dp/DpQB3w/Zwj
        kTKTOj4/iCun4qFVvybj0NAHkHivwlPZSGKRcN1Vhyjr03Iccj1BAIPUCgDGoAKACgAoAKAOp+HeleZL
        u2lzHt2KoyzzSNsiVR3Ytnb/ALW2gD6Cu/hjqdugma1EqqMsLWTz5ox1O+Iopkx38jzce45oA3PBvjMO
        CI90hGQQkUrMD3BATgjuKAOD+NtutxDJlSssH7wBlKsoH3wQRuAZexHXaewoA+dKACgAoAKACgD2P9mK
        03XkfHAlVunHyQXJ6+qkqfY49RQB93aevAoA0zyKAPEv2lfDZltvMVN0ozF8oy7pKCqqMcsfO8sKP9ps
        dTQB8EFcexHr1FABQAUAFABQB9Nfse68hFzbHG9HE6ZALbZFWKTZ3AXYu7GPvj1oA+tbB+BQBoeZQB51
        8aPFaWdpcTsR+7Q7AcfNKeIlHuXK/Tk9qAPzkH5/1oAWgAoAKACgDc8D+KWsrm3uRz5MqsQOrR/dlX/g
        cZZee5B7UAfo3oOspIiOrB45FV0YdGRgGUj2IINAGu98MUAfJX7ZPjve1vYqfu/6TL7Eho4V/IyuR7xm
        gD5moAKACgAoAKACgD7c+A2oOmmWUj58kxuFYKz7PLnliKsEUvt+QMpCkckHaAuQDt4vGcUnyxsZX7AR
        TIM+7SRqoUdznOOgPSgD4x/aGLf2ndqTkp5AJ9SbaFzgdhuY4HYYoA86oAKACgAoAQmgD1LwD+zdqt/h
        hD9lhPPm3eYgR6pHjzn45B2Kh/vjrQB9p2nhSPT7CC2jJeKCIIH4JZslpGbbwC0jMxA454oA5bwWCZMB
        SxPoCf5UAcp8ev2TLi/kN9bOv2h0UTQTPsEjRoqIYJNu0PsUKyysFYjIZcEMAfJPizwVd2D+VcWz20nO
        BKhUPjqY3/1cqj+9Gzr70AYtABQBd0PRZLmWKBF3SyuEUdsnuT2VRlmPZQT2oA+9/gp+ztZaekchiE11
        gEyyrucNjrGDkQjrgJ82OGZ+tAHucFoB2H5UATGMHtQAggX0/mf50ASZoAy/EOhQ3MbQywpPC/3klRZE
        PplWBGR2PUdsUAfEP7Uf7NkWmKt7bAizZwksTMX+zO5xGyOxLmGRvkw7MySFACwkAjAPnGgD3/8AY68G
        +deS3JGVto9q/wDXWbIyPpEJB/wOgD7o0k5OPb+VAGoGoAM0AGaADNADZW4NAHF/EvwuL+zvLXvcQSIu
        e0u3dC3/AACVUf8ACgD8usHuMHuD1B7g+46UAfSX7K3xjsLFJLacmFpJS4mxuQ5VVAfHzLt28EA9T060
        AfYnhrWopSskcqzRn+KN1cc+pUnH0OKANyJsbgeMO2PcH5gR7fNt+oNAEnmj1oATzh6/rQAGYev60AQ3
        NyMdc0AebeO/jppenAmW5DyL0ggIlmJ9CFO2PPrIyfjQB+dninV1uLi5nWPyknuJpljB3CNZZGkCA45C
        BtucDp0FAGZQBe0zXp4TujmeJh3jdkP5qaAO1079oXWohgahKQP+ejCT/wBDBoA0v+Gotc/5/M/WGE/+
        06AEP7T+t/8AP2P+/EH/AMRQBDP+0trbf8vpH+7FCv6iPNAHMa38UNRuQRJfTSKeqtM+z/vgHb+lAHME
        0AFAH//Z
</value>
  </data>
</root>